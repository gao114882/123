创建本地分支并切换
git checkout -b 分支名

查看当前分支:
git branch -vv

解决冲突:
执行git checkout -f，然后再执行git pull重新checkout

新建本地分支与远程分支关联
git branch –set-upstream 本地新建分支名 origin/远程分支名

git add .
git commit -m ""
git push 

提交本地分支到远程仓库
git push origin 本地分支名

删除git上文件
git rm -f 文件
查看修改的不同文件
git st .
查看分支
git br -avv

git fetch
合并代码：
git merge origin/master 

主分支回退到某个版本:
git reset --hard 139dcfaa558e3276b30b6b2e5cbbb9c00bbdca96 
git push -f -u origin master 

diff -urN a/a.txt b/a.txt > patches/001-fix-lua51.patch 打包patch 


gitlab或github下，a开发者fork了b开发者的项目后，如果b开发人员更新代码后，a开发者如何获得更新？
查看是否建立了主repo的远程源：
git remote -v 
如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源:
git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
git remote -v 
如果想与主repo合并：
git fetch upstream
git merge upstream/master


删除空格：
：%s/\s\+$//

tab转4个空格
%retab!

vim 打开没有权限的文件保存：
%! sudo tee % /dev/null

http://www.cplusplus.com/reference/string/string/substr/
https://gocn.vip/question/2026

生成ca公私钥
 openssl genrsa -out ca.key 1024
 生成CSR
 openssl req -new -key ca.key -out ca.csr
生成签名证书
  openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in ca.csr -out client.crt

查看linux 系统发行版本：
  cat /etc/redhat-release
  
  查看linux 系统内核版本:
  cat /proc/version 
  获取某个端口的tcp连接数：
  netstat -nat|grep -i "80"|grep ESTABLISHED|wc -l
  netstat -anlpt|grep 80
  
   监听所有的tcp连接：
  netstat -n | grep "^tcp" | awk '{print $6}' | sort | uniq -c | sort -n
  netstat -nat|grep -i "5010"|wc -l
  
  查看CPU内核数：
  grep -c 'model name' /proc/cpuinfo

  查看CPU线程数:

  grep 'processor' /proc/cpuinfo | sort -u | wc -l

 查看内核运行情况：

  journalctl -xb

查看CPU使用情况：
  vmstat -n 1

抓包：
 tcpdump -iany tcp port 5010

tcp time_wait过多处理:
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30

设置hostname
 hostnamectl set-hostname newname

iptables -F

 查看磁盘io性能：
 iostat -x 10
 iotop
查看磁盘参数：
 smartctl -i /dev/hdb
 

 mkdir -m 711 test  创建带有权限的文件夹

 cat -b test  /cat -n test 查看文件显示行号，b:空格不显示， n:空格也显示

 cat -A test 显示出特殊字符

 查看文件隐藏的属性： 
 lsattr  
 
 设置文件隐藏属性： 
 chattr +i    文件不能被更改，删除
chattr +a     文件只能增加数据，不能删除和修改数据，只有root才能设置整个属性

dd if=/etc/passwd of=/tmp/passwd.back   把passwd备份到tmp下， 恢复也一样

查找postgresql 耗时的语句：
select * from pg_stat_statements order by total_time desc limit 5;
查找postgresql 读取buffer多的语句：
select * from pg_stat_statements order by shared_blks_hit+shared_blks_read desc limit 5;

valgrind 使用方式
valgrind --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memchecklog ./mts -f /ssd_disk/ruishi/conf/rs_be.jsonvalgrind 
 
pstack pid 打印栈信息

git show 显示某个版本的更改内容

抓包
tcpdump -i eth0 -nn port 21


开启core 文件： 
vim /etc/security/limit.conf  
*  soft      core    unlimited

cat /etc/sysctl.conf
kernel.core_pattern=/tmp/core_%e_%p

cat /proc/sys/kernel/core_pattern
/tmp/core_%e_%p

防止误删数据库： 用begin commit or rollback;

2>&1 &

rpm -ql net-snmp
  rpm -qa|grep -i mysql  查询

  rpm -e mysql --nodeps 删除 

查看redis慢查询
info commandstats

slowlog get 10


nslookup 根据域名查看Ip

两者满足其一：
grep -E "word1|word2|word3"   file.txt

两者都满足
grep word1 file.txt | grep word2 |grep word3
查看总tcp连接数状态：
ss -s 
netstat -an | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
ss  -tan|awk 'NR>1{++S[$1]}END{for (a in S) print a,S[a]}'

三表联查：

select A.col1, B.col2, C.col3 from (A left join B on a.col3 = b.col1) left join c on A.col3 = C.col1 Where ......+ 条件

查出哪个IP地址连接最多,将其封了.
netstat -na|grep ESTABLISHED|awk {print $5}|awk -F: {print $1}|sort|uniq -c|sort -r +0n

netstat -na|grep SYN|awk {print $5}|awk -F: {print $1}|sort|uniq -c|sort -r +0n

nc -nvz  ip port 

lsof -n | grep deleted
删掉部分占用空间的程序
lsof |grep delete | grep -v grep | awk '{print $2}' | xargs kill -9


查看目录占用磁盘容量：
du -sh 
du -h --max-depth=1

monit 源码库
rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm


设置环境变量：
PAGER=/bin/more
export PAGER
删除环境变量
unset PAGER

PAGER设置查看文件方式more/less
unset EDITOR
unset PAGER

debug 调试go代码
GODEBUG="schedtrace=300,scheddetail=1" ./main

perf top 分析代码执行位
